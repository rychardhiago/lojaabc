version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8989:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./nginx-logs:/var/log/nginx
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:8.0.36
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  phpmyadmin:
      container_name: phpmyadmin
      image: phpmyadmin/phpmyadmin:latest
      restart: always
      ports:
          - 8090:80
      environment:
          PMA_HOST: db
          MYSQL_USERNAME: ${DB_USERNAME}
          MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      links:
          -   db
      depends_on:
          - db
      networks:
          # define your network where all containers are connected to each other
          - app-network


#Docker Networks
networks:
    app-network:
        driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
